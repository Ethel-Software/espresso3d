-Added an orthographic mode to viewports.  switchToOrthographicMode puts the viewport in ortho mode.  Other funcs
such as zoomOrtho are implemented along with it.

-Added ability to set the clear color for each viewport.  This is the color the non-rendered portions of the viewport are (defaults to black)

-Added particle systems that can be created programmatically or registered and loaded with a mapfile via the PARTICLESYSTEM tag.  
 Particle systems are feature rich and can have particles that are collision detected or not.

-Added sprites & billboarding sprites.  These can be added to the engine for rendering.

-Added portal support for fast portals (not accurate portals).  Portals are defined
 in the mapfile using the PORTAL tag.  
 
 Portals allow large scenes to be culled rather quickly into just the viewable portion.  
 This helps speed up rendering of large scenes.
 
 Lights of directly linked sectors of a given sector will light the given sector.
 If sectors are too small or lights too strong it can cause visual artifacts (Sector3 should light sector1 if sector1 is really close, but it won't because it is 2 sectors away...) 
 
 Sector switching due to collisions with portals is handled internally by the engine for actors, lights, and particle systems currently.

-Refactored collision detection to be able to check collisions for any object extending E3DCollisionDetectableObject (such as particles & sprites)

-Fixed E3DLight's lighting equation.  It is now simpler to use.  It is still a temporary lighting solution until more advanced lighting is implemented

-Added a new logo that is displayed randomly instead of the original logo

-Fixed actor loading from a mapfile to recognize and correctly orient the actor around the up vector in them mapfile

-Added ability to load map and actor files out of JAR files (texturesets already had this ability)

-Many performance enhancements, new internal engine features/classes, and OO refactoring.